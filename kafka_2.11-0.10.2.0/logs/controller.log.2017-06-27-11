[2017-06-27 13:05:52,680] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-27 13:05:52,682] INFO [Controller 1]: Initialized controller epoch to 9 and zk version 8 (kafka.controller.KafkaController)
[2017-06-27 13:05:52,683] INFO [Controller 1]: Controller 1 incremented epoch to 10 (kafka.controller.KafkaController)
[2017-06-27 13:05:52,683] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-27 13:05:52,793] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2017-06-27 13:05:52,795] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2017-06-27 13:05:52,796] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-27 13:05:52,796] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-27 13:05:52,797] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-27 13:05:52,797] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-27 13:05:52,798] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-27 13:05:52,799] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-27 13:05:52,799] INFO [Controller 1]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-27 13:05:52,799] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-27 13:05:52,801] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-06-27 13:05:52,801] INFO [Controller 1]: List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2017-06-27 13:05:52,803] INFO [Controller 1]: Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2017-06-27 13:05:52,803] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-27 13:05:52,803] INFO [Controller 1]: Current list of topics in the cluster: Set(rf1p1, __consumer_offsets) (kafka.controller.KafkaController)
[2017-06-27 13:05:52,810] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to 10.133.22.156:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-27 13:05:52,810] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to 10.133.22.156:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-27 13:05:52,815] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=1],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=1],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=1],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=1],[Topic=__consumer_offsets,Partition=6,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=1],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=1],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=1],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=1],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=25,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=17,Replica=1],[Topic=rf1p1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:05:52,832] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=rf1p1,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:05:52,835] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OnlinePartition, [__consumer_offsets,30] -> OnlinePartition, [__consumer_offsets,47] -> OnlinePartition, [__consumer_offsets,29] -> OnlinePartition, [__consumer_offsets,41] -> OnlinePartition, [__consumer_offsets,39] -> OnlinePartition, [__consumer_offsets,10] -> OnlinePartition, [__consumer_offsets,17] -> OnlinePartition, [__consumer_offsets,14] -> OnlinePartition, [__consumer_offsets,40] -> OnlinePartition, [__consumer_offsets,18] -> OnlinePartition, [__consumer_offsets,26] -> OnlinePartition, [__consumer_offsets,0] -> OnlinePartition, [__consumer_offsets,24] -> OnlinePartition, [__consumer_offsets,33] -> OnlinePartition, [__consumer_offsets,20] -> OnlinePartition, [__consumer_offsets,21] -> OnlinePartition, [__consumer_offsets,3] -> OnlinePartition, [__consumer_offsets,22] -> OnlinePartition, [__consumer_offsets,5] -> OnlinePartition, [__consumer_offsets,12] -> OnlinePartition, [__consumer_offsets,8] -> OnlinePartition, [__consumer_offsets,23] -> OnlinePartition, [__consumer_offsets,15] -> OnlinePartition, [__consumer_offsets,48] -> OnlinePartition, [__consumer_offsets,11] -> OnlinePartition, [__consumer_offsets,13] -> OnlinePartition, [__consumer_offsets,49] -> OnlinePartition, [__consumer_offsets,6] -> OnlinePartition, [__consumer_offsets,28] -> OnlinePartition, [__consumer_offsets,4] -> OnlinePartition, [__consumer_offsets,37] -> OnlinePartition, [__consumer_offsets,31] -> OnlinePartition, [__consumer_offsets,44] -> OnlinePartition, [__consumer_offsets,42] -> OnlinePartition, [__consumer_offsets,34] -> OnlinePartition, [__consumer_offsets,46] -> OnlinePartition, [__consumer_offsets,25] -> OnlinePartition, [__consumer_offsets,45] -> OnlinePartition, [__consumer_offsets,27] -> OnlinePartition, [__consumer_offsets,32] -> OnlinePartition, [__consumer_offsets,43] -> OnlinePartition, [__consumer_offsets,36] -> OnlinePartition, [__consumer_offsets,35] -> OnlinePartition, [__consumer_offsets,7] -> OnlinePartition, [__consumer_offsets,9] -> OnlinePartition, [__consumer_offsets,38] -> OnlinePartition, [rf1p1,0] -> OnlinePartition, [__consumer_offsets,1] -> OnlinePartition, [__consumer_offsets,2] -> OnlinePartition, [__consumer_offsets,16] -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:05:52,837] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2017-06-27 13:05:52,837] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-27 13:05:52,838] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-27 13:05:52,841] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-27 13:05:52,842] INFO [delete-topics-thread-1], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-27 13:05:52,843] DEBUG [Topic Deletion Manager 1], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-27 13:05:57,844] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-27 13:05:57,847] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,47] -> List(2, 1, 0), [__consumer_offsets,29] -> List(2, 1, 0), [__consumer_offsets,41] -> List(2, 1, 0), [__consumer_offsets,17] -> List(2, 1, 0), [__consumer_offsets,14] -> List(2, 0, 1), [__consumer_offsets,26] -> List(2, 0, 1), [__consumer_offsets,20] -> List(2, 0, 1), [__consumer_offsets,5] -> List(2, 1, 0), [__consumer_offsets,8] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1, 0), [__consumer_offsets,11] -> List(2, 1, 0), [__consumer_offsets,44] -> List(2, 0, 1), [__consumer_offsets,32] -> List(2, 0, 1), [__consumer_offsets,35] -> List(2, 1, 0), [__consumer_offsets,38] -> List(2, 0, 1), [rf1p1,0] -> List(2), [__consumer_offsets,2] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,19] -> List(1, 2, 0), [__consumer_offsets,10] -> List(1, 0, 2), [__consumer_offsets,40] -> List(1, 0, 2), [__consumer_offsets,22] -> List(1, 0, 2), [__consumer_offsets,13] -> List(1, 2, 0), [__consumer_offsets,49] -> List(1, 2, 0), [__consumer_offsets,28] -> List(1, 0, 2), [__consumer_offsets,4] -> List(1, 0, 2), [__consumer_offsets,37] -> List(1, 2, 0), [__consumer_offsets,31] -> List(1, 2, 0), [__consumer_offsets,34] -> List(1, 0, 2), [__consumer_offsets,46] -> List(1, 0, 2), [__consumer_offsets,25] -> List(1, 2, 0), [__consumer_offsets,43] -> List(1, 2, 0), [__consumer_offsets,7] -> List(1, 2, 0), [__consumer_offsets,1] -> List(1, 2, 0), [__consumer_offsets,16] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,30] -> List(0, 1, 2), [__consumer_offsets,39] -> List(0, 2, 1), [__consumer_offsets,18] -> List(0, 1, 2), [__consumer_offsets,0] -> List(0, 1, 2), [__consumer_offsets,24] -> List(0, 1, 2), [__consumer_offsets,33] -> List(0, 2, 1), [__consumer_offsets,3] -> List(0, 2, 1), [__consumer_offsets,21] -> List(0, 2, 1), [__consumer_offsets,12] -> List(0, 1, 2), [__consumer_offsets,15] -> List(0, 2, 1), [__consumer_offsets,48] -> List(0, 1, 2), [__consumer_offsets,6] -> List(0, 1, 2), [__consumer_offsets,42] -> List(0, 1, 2), [__consumer_offsets,27] -> List(0, 2, 1), [__consumer_offsets,45] -> List(0, 2, 1), [__consumer_offsets,36] -> List(0, 1, 2), [__consumer_offsets,9] -> List(0, 2, 1))) (kafka.controller.KafkaController)
[2017-06-27 13:05:57,849] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-27 13:05:57,850] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2017-06-27 13:05:57,850] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-27 13:05:57,850] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2017-06-27 13:05:57,850] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,30] -> List(0, 1, 2), [__consumer_offsets,39] -> List(0, 2, 1), [__consumer_offsets,18] -> List(0, 1, 2), [__consumer_offsets,0] -> List(0, 1, 2), [__consumer_offsets,24] -> List(0, 1, 2), [__consumer_offsets,33] -> List(0, 2, 1), [__consumer_offsets,3] -> List(0, 2, 1), [__consumer_offsets,21] -> List(0, 2, 1), [__consumer_offsets,12] -> List(0, 1, 2), [__consumer_offsets,15] -> List(0, 2, 1), [__consumer_offsets,48] -> List(0, 1, 2), [__consumer_offsets,6] -> List(0, 1, 2), [__consumer_offsets,42] -> List(0, 1, 2), [__consumer_offsets,45] -> List(0, 2, 1), [__consumer_offsets,27] -> List(0, 2, 1), [__consumer_offsets,36] -> List(0, 1, 2), [__consumer_offsets,9] -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2017-06-27 13:05:57,851] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 1.000000 (kafka.controller.KafkaController)
[2017-06-27 13:06:05,830] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2017-06-27 13:06:05,831] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2017-06-27 13:06:05,832] DEBUG [Controller 1]: Live brokers: 2 (kafka.controller.KafkaController)
[2017-06-27 13:06:05,835] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,837] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,43] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,841] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,845] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,845] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,846] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,847] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,850] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,14] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,851] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-14=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,851] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,851] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,851] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,853] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,28] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,854] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,855] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,858] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,4] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,860] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,860] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,863] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,36] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,864] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,865] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,868] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,6] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,869] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,869] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,869] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,869] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,870] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,873] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,39] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,873] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-39=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,874] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,874] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,874] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,874] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,874] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,874] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,876] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,23] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,876] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-23=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,876] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,876] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,876] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,878] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,24] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,879] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,879] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,879] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,879] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,879] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,882] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,38] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,882] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-38=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,882] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,882] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,882] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,884] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,16] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,884] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,885] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,885] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,885] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,885] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,887] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,3] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,887] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-3=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,888] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,888] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,888] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,888] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,888] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,888] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,890] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,21] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,891] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-21=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,891] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,891] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,891] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,892] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,10] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,893] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,893] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,895] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,40] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,896] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,896] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,897] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,34] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,898] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,899] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,900] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,25] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,901] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,902] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,902] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,902] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,902] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,904] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,27] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,904] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-27=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,904] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,904] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,904] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,907] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,42] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,909] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,909] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,909] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,909] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,909] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,912] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,11] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,913] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-11=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,913] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,913] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,913] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,914] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,7] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,915] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,916] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,916] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,916] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,916] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,918] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,47] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,918] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-47=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,918] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,918] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,918] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,918] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,919] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,919] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,922] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,9] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,923] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-9=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,923] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,923] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,923] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,924] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,13] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,926] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,926] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,926] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,926] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,926] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,928] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,29] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,928] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-29=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,929] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,929] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,929] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,929] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,929] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,929] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,932] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,8] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,933] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-8=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,933] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,933] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,933] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,934] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,22] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,937] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,937] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,939] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,31] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,940] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,940] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,942] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,18] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,943] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,943] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,943] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,943] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,943] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,945] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,20] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,945] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-20=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,945] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,945] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,946] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,947] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,37] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,948] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,948] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,949] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,49] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,950] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,951] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,952] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,12] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,953] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,2] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,954] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,954] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,954] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,954] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,957] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,5] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,958] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-5=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,958] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,958] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,958] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,958] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,959] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,959] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,961] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,32] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,961] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-32=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,961] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,961] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,962] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,962] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,962] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,962] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,966] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,2] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,966] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-2=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,966] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,966] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,966] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,968] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,1] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,969] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,969] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,971] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,0] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,972] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,972] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,972] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,972] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,972] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,974] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,15] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,975] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-15=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,975] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,975] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,975] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,975] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,975] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,975] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,977] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,44] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,977] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-44=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,977] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,977] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,977] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,977] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,977] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,978] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,980] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,17] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,980] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-17=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,981] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,981] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,981] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,982] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,48] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:05,983] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:1,2,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:05,984] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,984] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,984] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,984] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,986] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,26] is {"leader":2,"leader_epoch":9,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,987] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-26=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=9, isr=[2], zkVersion=14, replicas=[2, 0, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,987] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,987] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,987] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,987] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,987] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,988] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,992] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,33] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,992] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-33=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,992] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,992] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,993] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,993] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,993] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,993] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,995] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,41] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,995] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-41=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,996] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,996] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,996] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,996] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,996] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,996] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2017-06-27 13:06:05,998] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,45] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:05,999] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-45=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[0, 2, 1])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:05,999] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,999] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,999] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,999] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:05,999] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:05,999] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2017-06-27 13:06:06,002] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,35] is {"leader":2,"leader_epoch":10,"isr":[2]} (kafka.controller.KafkaController)
[2017-06-27 13:06:06,002] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=10, partitionStates={__consumer_offsets-35=PartitionState(controllerEpoch=10, leader=2, leaderEpoch=10, isr=[2], zkVersion=15, replicas=[2, 1, 0])}, liveLeaders=(10.133.22.156:9094 (id: 2 rack: null))) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-27 13:06:06,002] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:06,002] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-27 13:06:06,002] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,003] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,46] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:06,005] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,0,LeaderEpoch:8,ControllerEpoch:9), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,006] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,008] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,19] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:06,008] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:6,ControllerEpoch:9), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,009] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,010] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,30] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2017-06-27 13:06:06,011] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10)) (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,013] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10) (kafka.controller.KafkaController)
[2017-06-27 13:06:06,014] INFO [Controller 1]: Shutting down broker 2 (kafka.controller.KafkaController)
[2017-06-27 13:06:06,014] DEBUG [Controller 1]: All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2017-06-27 13:06:06,014] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2017-06-27 13:06:06,015] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,020] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,023] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,025] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,026] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 10 fails to send request (type=StopReplicaRequest, controllerId=1, controllerEpoch=10, deletePartitions=false, partitions=__consumer_offsets-35) to broker 10.133.22.156:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:114)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:112)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:112)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:108)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$1(NetworkClientBlockingOps.scala:136)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:142)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:108)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:192)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,028] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,030] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,031] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,033] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,035] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,036] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,039] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,042] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,043] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,045] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,047] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,048] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,049] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,050] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,051] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,052] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,054] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,056] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,057] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,058] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,059] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,060] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,061] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,062] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,064] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,066] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,068] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,069] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,071] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,072] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,073] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,074] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,075] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,076] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,077] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,078] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,079] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,080] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,081] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,082] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,083] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,084] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,085] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,086] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,087] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,089] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:06,091] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:10,ControllerEpoch:10),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:10),[__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[rf1p1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:9),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10),[__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:10) (kafka.controller.KafkaController)
[2017-06-27 13:06:06,133] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,237] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,343] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,045] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,150] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,251] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,357] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,462] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,568] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,674] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,780] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,881] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:06,987] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,090] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,197] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,298] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,399] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,505] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,610] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,714] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,817] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:07,918] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:08,019] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:08,124] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:08,228] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:08,331] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker 10.133.22.156:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.133.22.156:9093 (id: 1 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$.awaitReady$1(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:94)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:185)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:184)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2017-06-27 13:06:08,332] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2017-06-27 13:06:08,333] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-27 13:06:08,333] INFO [delete-topics-thread-1], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-27 13:06:08,333] INFO [delete-topics-thread-1], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-27 13:06:08,333] INFO [delete-topics-thread-1], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-27 13:06:08,334] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-06-27 13:06:08,334] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-06-27 13:06:08,335] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,335] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,335] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,336] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,336] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,336] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2017-06-27 13:06:08,336] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
